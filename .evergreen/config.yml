########################################
# Evergreen Template for MongoDB Drivers
########################################

# When a task that used to pass starts to fail
# Go through all versions that may have been skipped to detect
# when the task started failing
stepback: true

# Fail builds when pre tasks fail.
pre_error_fails_task: true

# Mark a failure as a system/bootstrap failure (purple box) rather then a task
# failure by default.
# Actual testing tasks are marked with `type: test`
command_type: system

# Protect ourself against rogue test case, or curl gone wild, that runs forever
# jruby runs take over two hours sometimes
exec_timeout_secs: 10800

# What to do when evergreen hits the timeout (`post:` tasks are run automatically)
timeout:
  - command: shell.exec
    params:
      script: |
        ls -la

functions:
  "fetch source":
    # Executes git clone and applies the submitted patch, if any
    - command: git.get_project
      params:
        directory: "src"
    - command: shell.exec
      params:
        working_dir: "src"
        script: |
          set -ex
          
          git submodule update --init --recursive

  "fetch egos":
    - command: shell.exec
      params:
        working_dir: "src"
        script: |
          set -ex
          
          curl -sfLo egos https://raw.githubusercontent.com/p-mongo/egos/master/egos
          chmod +x ./egos
  
  "create expansions":
    # Make an evergreen exapanstion file with dynamic values
    - command: shell.exec
      params:
        working_dir: "src"
        script: |
           # Get the current unique version of this checkout
           if [ "${is_patch}" = "true" ]; then
              CURRENT_VERSION=$(git describe)-patch-${version_id}
           else
              CURRENT_VERSION=latest
           fi

           export DRIVERS_TOOLS="$(pwd)/../drivers-tools"

           export MONGO_ORCHESTRATION_HOME="$DRIVERS_TOOLS/.evergreen/orchestration"
           export MONGODB_BINARIES="$DRIVERS_TOOLS/mongodb/bin"
           export UPLOAD_BUCKET="${project}"
           export PROJECT_DIRECTORY="$(pwd)"

           cat <<EOT > expansion.yml
           CURRENT_VERSION: "$CURRENT_VERSION"
           DRIVERS_TOOLS: "$DRIVERS_TOOLS"
           MONGO_ORCHESTRATION_HOME: "$MONGO_ORCHESTRATION_HOME"
           MONGODB_BINARIES: "$MONGODB_BINARIES"
           UPLOAD_BUCKET: "$UPLOAD_BUCKET"
           PROJECT_DIRECTORY: "$PROJECT_DIRECTORY"
           PREPARE_SHELL: |
              set -o errexit
              set -o xtrace
              export DRIVERS_TOOLS="$DRIVERS_TOOLS"
              export MONGO_ORCHESTRATION_HOME="$MONGO_ORCHESTRATION_HOME"
              export MONGODB_BINARIES="$MONGODB_BINARIES"
              export UPLOAD_BUCKET="$UPLOAD_BUCKET"
              export PROJECT_DIRECTORY="$PROJECT_DIRECTORY"

              export TMPDIR="$MONGO_ORCHESTRATION_HOME/db"
              export PATH="$MONGODB_BINARIES:$PATH"
              export PROJECT="${project}"
              
              export MONGODB_VERSION=${VERSION}
              export TOPOLOGY=${TOPOLOGY}
              export SINGLE_MONGOS=${SINGLE_MONGOS}
              export AUTH=${AUTH}
              export SSL=${SSL}
              export APP_TESTS=${APP_TESTS}
           EOT
           # See what we've done
           cat expansion.yml

    # Load the expansion file to make an evergreen variable with the current unique version
    - command: expansions.update
      params:
        file: src/expansion.yml

  "exec script" :
    - command: shell.exec
      type: test
      params:
        working_dir: "src"
        script: |
          ${PREPARE_SHELL}
          [ -f ${PROJECT_DIRECTORY}/${file} ] && sh ${PROJECT_DIRECTORY}/${file} || echo "${PROJECT_DIRECTORY}/${file} not available, skipping"

  "upload docs" :
    - command: shell.exec
      params:
        silent: true
        script: |
           export AWS_ACCESS_KEY_ID=${aws_key}
           export AWS_SECRET_ACCESS_KEY=${aws_secret}
           aws s3 cp ${PROJECT_DIRECTORY}/doc/html s3://mciuploads/${UPLOAD_BUCKET}/docs/${CURRENT_VERSION} --recursive --acl public-read --region us-east-1
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file:  ${PROJECT_DIRECTORY}/doc/html/index.html
        remote_file: ${UPLOAD_BUCKET}/docs/${CURRENT_VERSION}/index.html
        bucket: mciuploads
        permissions: public-read
        content_type: text/html
        display_name: "Rendered docs"

  "upload coverage" :
    - command: shell.exec
      params:
        silent: true
        script: |
           export AWS_ACCESS_KEY_ID=${aws_key}
           export AWS_SECRET_ACCESS_KEY=${aws_secret}
           aws s3 cp ${PROJECT_DIRECTORY}/coverage s3://mciuploads/${UPLOAD_BUCKET}/${build_variant}/${revision}/${version_id}/${build_id}/coverage/ --recursive --acl public-read --region us-east-1
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file:  ${PROJECT_DIRECTORY}/coverage/index.html
        remote_file: ${UPLOAD_BUCKET}/${build_variant}/${revision}/${version_id}/${build_id}/coverage/index.html
        bucket: mciuploads
        permissions: public-read
        content_type: text/html
        display_name: "Coverage Report"

  "upload mo artifacts":
    - command: shell.exec
      params:
        script: |
          ${PREPARE_SHELL}
          find $MONGO_ORCHESTRATION_HOME -name \*.log | xargs tar czf mongodb-logs.tar.gz
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: mongodb-logs.tar.gz
        remote_file: ${UPLOAD_BUCKET}/${build_variant}/${revision}/${version_id}/${build_id}/logs/${task_id}-${execution}-mongodb-logs.tar.gz
        bucket: mciuploads
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        display_name: "mongodb-logs.tar.gz"
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: ${DRIVERS_TOOLS}/.evergreen/orchestration/server.log
        remote_file: ${UPLOAD_BUCKET}/${build_variant}/${revision}/${version_id}/${build_id}/logs/${task_id}-${execution}-orchestration.log
        bucket: mciuploads
        permissions: public-read
        content_type: ${content_type|text/plain}
        display_name: "orchestration.log"

  "upload working dir":
    - command: archive.targz_pack
      params:
        target: "working-dir.tar.gz"
        source_dir: ${PROJECT_DIRECTORY}/
        include:
          - "./**"
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: working-dir.tar.gz
        remote_file: ${UPLOAD_BUCKET}/${build_variant}/${revision}/${version_id}/${build_id}/artifacts/${task_id}-${execution}-working-dir.tar.gz
        bucket: mciuploads
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        display_name: "working-dir.tar.gz"
    - command: archive.targz_pack
      params:
        target: "drivers-dir.tar.gz"
        source_dir: ${DRIVERS_TOOLS}
        include:
          - "./**"
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: drivers-dir.tar.gz
        remote_file: ${UPLOAD_BUCKET}/${build_variant}/${revision}/${version_id}/${build_id}/artifacts/${task_id}-${execution}-drivers-dir.tar.gz
        bucket: mciuploads
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        display_name: "drivers-dir.tar.gz"

  "upload test results to s3":
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        # src is the relative path to repo checkout,
        # This is specified in this yaml file earlier.
        local_file: ./src/tmp/rspec.json
        display_name: rspec.json
        remote_file: ${UPLOAD_BUCKET}/${version_id}/${build_id}/artifacts/${build_variant}/rspec.json
        content_type: application/json
        permissions: public-read
        bucket: mciuploads
    # AWS does not appear to support on-the-fly gzip encoding; compress
    # the results manually and upload a compressed file.
    # Typical size reduction: 50 MB -> 800 KB
    - command: shell.exec
      params:
        script: |
          gzip <src/tmp/rspec.json >src/tmp/rspec.json.gz
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        # src is the relative path to repo checkout,
        # This is specified in this yaml file earlier.
        local_file: ./src/tmp/rspec.json.gz
        display_name: rspec.json.gz
        remote_file: ${UPLOAD_BUCKET}/${version_id}/${build_id}/artifacts/${build_variant}/rspec.json.gz
        content_type: application/gzip
        permissions: public-read
        bucket: mciuploads
    - command: shell.exec
      params:
        script: |
          xz -9 <src/tmp/rspec.json >src/tmp/rspec.json.xz
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        # src is the relative path to repo checkout,
        # This is specified in this yaml file earlier.
        local_file: ./src/tmp/rspec.json.xz
        display_name: rspec.json.xz
        remote_file: ${UPLOAD_BUCKET}/${version_id}/${build_id}/artifacts/${build_variant}/rspec.json.xz
        content_type: application/x-xz
        permissions: public-read
        bucket: mciuploads

  "upload test results":
    - command: attach.xunit_results
      params:
        file: ./src/tmp/rspec.xml

  "run tests":
    - command: shell.exec
      type: test
      params:
        shell: bash
        working_dir: "src"
        script: |
          ${PREPARE_SHELL}
          env \
            MONGODB_URI="${MONGODB_URI}" \
            TOPOLOGY=${TOPOLOGY} \
            RVM_RUBY="${RVM_RUBY}" \
            RAILS="${RAILS}" \
            DRIVER="${DRIVER}" \
            I18N="${I18N}" \
            TEST_I18N_FALLBACKS="${TEST_I18N_FALLBACKS}" \
            ./egos .evergreen/run-tests.sh

  "fix absolute paths":
    - command: shell.exec
      params:
        script: |
          ${PREPARE_SHELL}
          for filename in $(find ${DRIVERS_TOOLS} -name \*.json); do
            perl -p -i -e "s|ABSOLUTE_PATH_REPLACEMENT_TOKEN|${DRIVERS_TOOLS}|g" $filename
          done

  "install dependencies":
    - command: shell.exec
      type: test
      params:
        working_dir: "src"
        script: |
          ${PREPARE_SHELL}
          file="${PROJECT_DIRECTORY}/.evergreen/install-dependencies.sh"
          [ -f ${file} ] && sh ${file} || echo "${file} not available, skipping"

pre:
  - func: "fetch source"
  - func: "fetch egos"
  - func: "create expansions"
  - func: "fix absolute paths"
  - func: "install dependencies"

post:
  # Removed, causing timeouts
  # - func: "upload working dir"
  - func: "upload mo artifacts"
  #- func: "upload test results"
  - func: "upload test results to s3"

tasks:
    - name: "test"
      commands:
        - func: "run tests"

axes:
  - id: "mongodb-version"
    display_name: MongoDB Version
    values:
      - id: "4.4"
        display_name: "MongoDB 4.4"
        variables:
           VERSION: "4.4"
      - id: "4.2"
        display_name: "MongoDB 4.2"
        variables:
           VERSION: "4.2"
      - id: "4.0"
        display_name: "MongoDB 4.0"
        variables:
           VERSION: "4.0"
      - id: "3.6"
        display_name: "MongoDB 3.6"
        variables:
           VERSION: "3.6"
      - id: "3.4"
        display_name: "MongoDB 3.4"
        variables:
           VERSION: "3.4"
      - id: "3.2"
        display_name: "MongoDB 3.2"
        variables:
           VERSION: "3.2"
      - id: "3.0"
        display_name: "MongoDB 3.0"
        variables:
           VERSION: "3.0"
      - id: "2.6"
        display_name: "MongoDB 2.6"
        variables:
           VERSION: "2.6"
  - id: "topology"
    display_name: Topology
    values:
      - id: "standalone"
        display_name: Standalone
        variables:
           TOPOLOGY: "server"
      - id: "replica-set"
        display_name: Replica Set
        variables:
           TOPOLOGY: "replica_set"
      - id: "sharded-cluster"
        display_name: Sharded Cluster
        variables:
           TOPOLOGY: "sharded_cluster"
           SINGLE_MONGOS: true
  - id: "auth"
    display_name: Authentication
    values:
      - id: "auth"
        display_name: Auth
        variables:
           AUTH: "auth"
      - id: "noauth"
        display_name: NoAuth
        variables:
           AUTH: "noauth"
  - id: "ssl"
    display_name: SSL
    values:
      - id: "ssl"
        display_name: SSL
        variables:
           SSL: "ssl"
      - id: "nossl"
        display_name: NoSSL
        variables:
           SSL: "nossl"
  - id: "ruby"
    display_name: Ruby Version
    values:
      - id: "ruby-2.3"
        display_name: ruby-2.3
        variables:
           RVM_RUBY: "ruby-2.3"
      - id: "ruby-2.4"
        display_name: ruby-2.4
        variables:
           RVM_RUBY: "ruby-2.4"
      - id: "ruby-2.5"
        display_name: ruby-2.5
        variables:
           RVM_RUBY: "ruby-2.5"
      - id: "ruby-2.6"
        display_name: ruby-2.6
        variables:
           RVM_RUBY: "ruby-2.6"
      - id: "ruby-2.7"
        display_name: ruby-2.7
        variables:
           RVM_RUBY: "ruby-2.7"
      - id: "ruby-head"
        display_name: ruby-head
        variables:
           RVM_RUBY: "ruby-head"
  - id: "jruby"
    display_name: JRuby Version
    values:
      - id: "jruby-9.2"
        display_name: jruby-9.2
        variables:
           RVM_RUBY: "jruby-9.2"
  - id: "os"
    display_name: OS
    values:
      - id: ubuntu-14.04
        display_name: "Ubuntu 14.04"
        run_on: ubuntu1404-small

      - id: rhel70
        display_name: "RHEL 7.0"
        run_on: rhel70-small
  - id: "driver"
    display_name: Driver Version
    values:
      - id: current
        display_name: "Driver-current"
        variables:
          DRIVER: "current"
      - id: master
        display_name: "Driver-master"
        variables:
          DRIVER: "master"
      - id: master-jruby
        display_name: "Driver-master (JRuby)"
        variables:
          DRIVER: "master-jruby"
      - id: stable
        display_name: "Driver-stable"
        variables:
          DRIVER: "stable"
      - id: stable-jruby
        display_name: "Driver-stable (JRuby)"
        variables:
          DRIVER: "stable-jruby"
      - id: oldstable
        display_name: "Driver-oldstable"
        variables:
          DRIVER: "oldstable"
      - id: oldstable-jruby
        display_name: "Driver-oldstable (JRuby)"
        variables:
          DRIVER: "oldstable-jruby"
      - id: min
        display_name: "Driver-min"
        variables:
          DRIVER: "min"
      - id: min-jruby
        display_name: "Driver-min (JRuby)"
        variables:
          DRIVER: "min-jruby"
  - id: "rails"
    display_name: Rails Version
    values:
      - id: master
        display_name: "Rails master"
        variables:
          RAILS: "master"
      - id: "5.1"
        display_name: "Rails 5.1"
        variables:
          RAILS: "5.1"
      - id: "5.2"
        display_name: "Rails 5.2"
        variables:
          RAILS: "5.2"
      - id: "6.0"
        display_name: "Rails 6.0"
        variables:
          RAILS: "6.0"
      - id: "6.1"
        display_name: "Rails 6.1"
        variables:
          RAILS: "6.1"
  - id: "i18n"
    display_name: I18n version
    values:
      - id: '1.0'
        display_name: "i18n-1.0"
        variables:
           I18N: "1.0"
      - id: current
        display_name: "i18n-current"
  - id: "test-i18n-fallbacks"
    display_name: Test i18n fallbacks
    values:
      - id: yes
        display_name: "i18n-fallbacks"
        variables:
           TEST_I18N_FALLBACKS: yes
  - id: app-tests
    display_name: Mongoid application tests
    values:
      - id: yes
        display_name: Yes
        variables:
          APP_TESTS: yes

buildvariants:
- matrix_name: "drivers"
  matrix_spec:
    driver: [current, master, stable]
    ruby: "ruby-2.7"
    mongodb-version: "4.4"
    topology: '*'
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "topologies"
  matrix_spec:
    driver: current
    ruby: "ruby-2.6"
    mongodb-version: ['3.6', '4.0', '4.2', '4.4']
    topology: ["replica-set", "sharded-cluster"]
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - ubuntu1604-small
  tasks:
     - name: "test"
- matrix_name: "topologies-old"
  matrix_spec:
    driver: current
    ruby: "ruby-2.6"
    mongodb-version: ['2.6', '3.0', '3.2', '3.4']
    topology: ["replica-set", "sharded-cluster"]
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - ubuntu1404-small
  tasks:
     - name: "test"
- matrix_name: "rubies"
  matrix_spec:
    driver: "current"
    # ruby-head temporarily omitted: https://jira.mongodb.org/browse/MONGOID-4833
    ruby: [ruby-2.3]
    mongodb-version: "4.2"
    topology: "replica-set"
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - ubuntu1604-small
  tasks:
     - name: "test"
- matrix_name: "mongodb"
  matrix_spec:
    driver: "current"
    ruby: "ruby-2.6"
    mongodb-version: ["4.0", "3.6", "3.4", "3.2"]
    topology: "standalone"
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "mongodb-old"
  matrix_spec:
    driver: "current"
    ruby: "ruby-2.5"
    mongodb-version: ["3.0", "2.6"]
    topology: "standalone"
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - ubuntu1404-small
  tasks:
     - name: "test"
- matrix_name: "jruby-new"
  matrix_spec:
    driver: "current"
    jruby: "jruby-9.2"
    mongodb-version: "4.2"
    topology: '*'
  display_name: "${jruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "jruby-driver-stable"
  matrix_spec:
    driver: "stable-jruby"
    jruby: "jruby-9.2"
    mongodb-version: "4.0"
    topology: "standalone"
  display_name: "${jruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "jruby-driver-master"
  matrix_spec:
    driver: "master-jruby"
    jruby: "jruby-9.2"
    mongodb-version: "4.2"
    topology: "standalone"
  display_name: "${jruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "driver-master-new"
  matrix_spec:
    driver: "master"
    ruby: "ruby-2.6"
    mongodb-version: "4.2"
    topology: "standalone"
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "driver-master-old"
  matrix_spec:
    driver: "master"
    ruby: "ruby-2.5"
    mongodb-version: "2.6"
    topology: "standalone"
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - ubuntu1404-small
  tasks:
     - name: "test"
- matrix_name: "driver-stable-new"
  matrix_spec:
    driver: "stable"
    ruby: "ruby-2.6"
    mongodb-version: "4.0"
    topology: "standalone"
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "driver-stable-old"
  matrix_spec:
    driver: "stable"
    ruby: "ruby-2.3"
    mongodb-version: "2.6"
    topology: "standalone"
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - ubuntu1404-small
  tasks:
     - name: "test"
- matrix_name: "driver-oldstable"
  matrix_spec:
    driver: "oldstable"
    ruby: "ruby-2.5"
    mongodb-version: "4.0"
    topology: "standalone"
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "driver-oldstable-jruby"
  matrix_spec:
    driver: "oldstable-jruby"
    jruby: "jruby-9.2"
    mongodb-version: "4.0"
    topology: "standalone"
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "driver-min"
  matrix_spec:
    driver: "min"
    ruby: "ruby-2.3"
    mongodb-version: "3.6"
    topology: "standalone"
  display_name: "${ruby}, ${driver}, ${mongodb-version}, ${topology}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "rails-5.1"
  matrix_spec:
    driver: "current"
    ruby: "ruby-2.4"
    mongodb-version: "4.2"
    topology: "standalone"
    rails: '5.1'
  display_name: "${rails}, ${driver}, ${mongodb-version}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "rails-5.2"
  matrix_spec:
    driver: "current"
    ruby: "ruby-2.6"
    mongodb-version: "4.2"
    topology: "standalone"
    rails: '5.2'
  display_name: "${rails}, ${driver}, ${mongodb-version}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "rails-6.0"
  matrix_spec:
    driver: "current"
    ruby: "ruby-2.7"
    mongodb-version: "4.4"
    topology: "standalone"
    rails: '6.0'
  display_name: "${rails}, ${driver}, ${mongodb-version}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
#- matrix_name: "rails-master"
#  matrix_spec: { driver: "current", ruby: "ruby-2.6", mongodb-version: "4.0", topology: "standalone", rails: 'master' }
#  display_name: "${rails}, ${driver}, ${mongodb-version}"
#  run_on:
#    - rhel70-small
#  tasks:
#     - name: "test"
- matrix_name: "i18n-1.0"
  matrix_spec:
    driver: "current"
    ruby: "ruby-2.5"
    mongodb-version: "4.2"
    topology: "standalone"
    i18n: '1.0'
  display_name: "i18n-1.0 ${rails}, ${driver}, ${mongodb-version}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: "i18n-fallbacks"
  matrix_spec:
    driver: "current"
    ruby: "ruby-2.6"
    mongodb-version: "4.2"
    topology: "standalone"
    i18n: '*'
    test-i18n-fallbacks: yes
  display_name: "i18n fallbacks ${rails}, ${driver}, ${mongodb-version}, ${i18n}"
  run_on:
    - rhel70-small
  tasks:
     - name: "test"
- matrix_name: app-tests
  matrix_spec:
    driver: current
    ruby: ruby-2.7
    mongodb-version: '4.4'
    topology: standalone
    app-tests: yes
    # Not currently testing rails master
    rails: ['5.1', '5.2', '6.0', '6.1']
  display_name: "app tests ${driver}, ${ruby}, ${rails}"
  run_on:
    - ubuntu1804-small
  tasks:
     - name: "test"
- matrix_name: app-tests-jruby
  matrix_spec:
    driver: current
    jruby: jruby-9.2
    mongodb-version: '4.2'
    topology: standalone
    app-tests: yes
  display_name: "app tests ${driver}, ${jruby}"
  run_on:
    - ubuntu1804-small
  tasks:
     - name: "test"
