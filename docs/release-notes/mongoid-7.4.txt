***********
Mongoid 7.4
***********

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

This page describes significant changes and improvements in Mongoid 7.4.
The complete list of releases is available `on GitHub
<https://github.com/mongodb/mongoid/releases>`_ and `in JIRA
<https://jira.mongodb.org/projects/MONGOID?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page>`_;
please consult GitHub releases for detailed release notes and JIRA for
the complete list of issues fixed in each release, including bug fixes.


BSON::ObjectId ``#as_json`` returns String
------------------------------------------

**Breaking change:** BSON::ObjectId ``#as_json`` used for JSON serialization
now returns a String value. Note this will also affect the behavior of the ``#to_json`` method.

.. code-block:: ruby

  id = BSON::ObjectId("03d623ca58edf9046e207565")

  id.as_json  #=> "03d623ca58edf9046e207565"

  id.to_json  #=>  "\"03d623ca58edf9046e207565\""

In Mongoid 7.3 and prior, this method returned a Hash with ``"$oid"`` as its key:

.. code-block:: ruby

  id.as_json  #=> { "$oid" => "03d623ca58edf9046e207565" }

  id.to_json  #=> "{\"$oid\":\"03d623ca58edf9046e207565\"}"

If you wish to preserve the legacy behavior, you may add the following
patch when initializing your application:

.. code-block:: ruby

  class BSON::ObjectId
    def as_json(options = nil)
      { "$oid" => to_s }
    end
  end


``===`` Operator Matches Ruby Semantics
---------------------------------------

**Breaking change:** In Mongoid 7.4, the ``===`` operator works the same way
as it does in Ruby, and is equivalent to calling ``is_a?`` on the right hand
side with the left hand side as the argument:

.. code-block:: ruby

  ModelClass === instance
  
  # equivalent to:
  instance.is_a?(ModelClass)

Previously, ``===`` returned ``true`` for some cases when the equivalent Ruby
``===`` implementation returned false.

Mongoid 7.4 behavior:

.. code-block:: ruby

  class Band
    include Mongoid::Document
  end
  
  class CoverBand < Band
  end
  
  band = Band.new
  cover_band = CoverBand.new
  
  band === Band
  # => false
  
  cover_band === Band
  # => false
  
  Band === Band
  # => false
  
  CoverBand === Band
  # => false
  
Mongoid 7.3 behavior:

.. code-block:: ruby

  band === Band
  # => true

  cover_band === Band
  # => true
  
  Band === Band
  # => true
  
  CoverBand === Band
  # => true

The standard invocation of ``===``, that is having the class on the left and
the instance on the right, works the same in Mongoid 7.4 as it did previously
and matches the core Ruby behavior:

.. code-block:: ruby

  Band === band
  # => true
  
  Band === cover_band
  # => true
