***********
Mongoid 7.5
***********

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

This page describes significant changes and improvements in Mongoid 7.5.
The complete list of releases is available `on GitHub
<https://github.com/mongodb/mongoid/releases>`_ and `in JIRA
<https://jira.mongodb.org/projects/MONGOID?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page>`_;
please consult GitHub releases for detailed release notes and JIRA for
the complete list of issues fixed in each release, including bug fixes.


``Document#to_a`` deprecated
````````````````````````````

The ``Document#to_a`` method is deprecated in Mongoid 7.5.


Combine Chained Operators Using ``and`` Instead of ``override``
```````````````````````````````````````````````````````````````

Mongoid 7.5 with the ``Mongoid.overwrite_chained_operators`` option set to ``false``
will combine conditions that use the same operator and field using an ``and``.
For example, in the following query:

.. code-block:: ruby

  Band.ne(name: "The Rolling Stones").ne(name: "The Beatles")

Mongoid 7.5 with the ``Mongoid.overwrite_chained_operators`` option set to ``false``
will generate the following criteria:

.. code-block:: ruby

  #<Mongoid::Criteria
    selector: {"name"=>{"$ne"=>"The Rolling Stones"}, "$and"=>[{"name"=>{"$ne"=>"The Beatles"}}]}
    options:  {}
    class:    Band
    embedded: false>

In Mongoid 7.4 and earlier, and in 7.5 with the ``Mongoid.overwrite_chained_operators``
option set to ``true``, the following criteria would be generated instead which
overwrites the first condition:

.. code-block:: ruby

  #<Mongoid::Criteria
    selector: {"name"=>{"$ne"=>"The Beatles"}}
    options:  {}
    class:    Band
    embedded: false>

The following functions are affected by this change:

- ``eq``
- ``elem_match``
- ``gt``
- ``gte``
- ``lt``
- ``lte``
- ``mod``
- ``ne``
- ``near``
- ``near_sphere``

.. note::

   In Mongoid 7.5 with the ``Mongoid.overwrite_chained_operators`` option set to
   ``false``, nested keys in the generated selector will always be strings,
   whereas in Mongoid 7.4 and earlier, and in 7.5 with the
   ``Mongoid.overwrite_chained_operators`` option set to ``true``, nested keys in
   the selector can be strings or symbols, depending on what was passed to the
   operator.


``update_one`` Warnings in ``upsert``
-------------------------------------

Mongoid 7.5 fixes incorrect usage of the driver's ``update_one`` method from
Mongoid's ``upsert`` method. Mongoid's ``upsert`` actually performs a
replacing upsert, and Mongoid 7.5 correctly calls ``replace_one``.


Force the ``attributes`` Method to Always Return a ``Hash``
```````````````````````````````````````````````````````````

Mongoid 7.5 with the ``Mongoid.legacy_attributes`` option set to ``false``
will always return a ``Hash`` when calling the ``attributes`` method.
For example:

.. code-block:: ruby

  class Band
    include Mongoid::Document

    field :name
  end

  band = Band.create!(name: "The Rolling Stones")
  p band.attributes.class
  # => Hash

  band = Band.first
  p band.attributes.class
  # => Hash

In Mongoid 7.4 and earlier, and in 7.5 with the ``Mongoid.legacy_attributes``
option set to ``true``, the ``attributes`` method on a document will return a
``BSON::Document`` when retrieving that document from the database, but will
return a ``Hash`` when instantiating a new document:

.. code-block:: ruby

  band = Band.create!(name: "The Rolling Stones")
  p band.attributes.class
  # => Hash

  band = Band.first
  p band.attributes.class
  # => BSON::Document
